# This file is part of the Fuzion language implementation.
#
# The Fuzion language implementation is free software: you can redistribute it
# and/or modify it under the terms of the GNU General Public License as published
# by the Free Software Foundation, version 3 of the License.
#
# The Fuzion language implementation is distributed in the hope that it will be
# useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
# License for more details.
#
# You should have received a copy of the GNU General Public License along with The
# Fuzion language implementation.  If not, see <https://www.gnu.org/licenses/>.


# -----------------------------------------------------------------------
#
#  Tokiwa Software GmbH, Germany
#
#  Source code of Fuzion standard library feature time
#
#  Author: Fridtjof Siebert (siebert@tokiwa.software)
#
# -----------------------------------------------------------------------

# time -- effect providing time
#
private time (
  p timeProvider,

  # action to be taken: install or default?
  redef r effectModes,

  _ unit
  ) : effect r
is

  # no guarantee can be given for precision nor resolution
  nano_time =>
    res := p.nano_time
    replace
    res


# short-hand for creating and installing time effect
#
time(rr ()->unit) => time defaultTime rr


# short-hand for creating and installing time effect
#
time(p timeProvider, rr ()->unit) =>
  time p (effectMode.inst rr) unit
  unit


# short-hand for accessing time effect in current environment
#
time =>
  times.installDefault
  time.env


timeProvider ref is

  # no guarantee can be given for precision nor resolution
  nano_time u64 is abstract


defaultTime : timeProvider is

  # no guarantee can be given for precision nor resolution
  nano_time => fuzion.std.nano_time


# unit type feature defining features related to time but not requiring an
# instance.
#
times is

  # install default effect time using defaultTime
  installDefault unit is
    if !(effects.exists<time>)
      _ := time defaultTime effectMode.default unit
