# This file is part of the Fuzion language implementation.
#
# The Fuzion language implementation is free software: you can redistribute it
# and/or modify it under the terms of the GNU General Public License as published
# by the Free Software Foundation, version 3 of the License.
#
# The Fuzion language implementation is distributed in the hope that it will be
# useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
# License for more details.
#
# You should have received a copy of the GNU General Public License along with The
# Fuzion language implementation.  If not, see <https://www.gnu.org/licenses/>.


# -----------------------------------------------------------------------
#
#  Tokiwa GmbH, Berlin
#
#  Source code of Fuzion standard library feature marray
#
#  Author: Fridtjof Siebert (siebert@tokiwa.eu)
#
# -----------------------------------------------------------------------

# marray -- one-dimensional mutable array
#
marray<T>(length i32,  # length
          init T       # initial value for elements
          ) : streamable<T>
is

# private:

  data := sys.array<T> length

  for x in indices do
    data[x] := init

# public:

  indices => 0..length-1

  # get element at given index i
  #
  index [ ] (i i32) T
    pre
      safety: 0 <= i < length
  is
    data[i]

  # set element at given index i to given value o
  #
  set [ ] (i i32, o T) unit
    pre
      safety: 0 <= i < length
  # post   NYI: no '==' for Object yet
  #   marray.this[i] == o
  is
    data[i] := o

  # create immutable array from this
  #
  as_array =>
    array<T> length, fun (i i32) => marray.this[i]

  iterate(f fun (T)) => as_array.iterate f
  asStream => as_array.asStream
