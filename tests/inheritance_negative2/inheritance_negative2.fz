# This file is part of the Fuzion language implementation.
#
# The Fuzion language implementation is free software: you can redistribute it
# and/or modify it under the terms of the GNU General Public License as published
# by the Free Software Foundation, version 3 of the License.
#
# The Fuzion language implementation is distributed in the hope that it will be
# useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
# License for more details.
#
# You should have received a copy of the GNU General Public License along with The
# Fuzion language implementation.  If not, see <https://www.gnu.org/licenses/>.


# -----------------------------------------------------------------------
#
#  Tokiwa GmbH, Berlin
#
#  Source code of Fuzion test inheritance_negative2
#
#  Author: Fridtjof Siebert (siebert@tokiwa.eu)
#
# -----------------------------------------------------------------------

inheritance_negative2
{
  out := stdout;

  inheritedNotFound1
  {
    A { }
    C : B1 { }  // 1. should flag an error, inheritance of a feature that does not exist
  }
  inheritedNotFound1;

  inheritedNotFound2
  {
    A { }
    C : A.B { }  // 2. should flag an error, inheritance of an inner feature that does not exist
  }
  inheritedNotFound2;

  outerInheritsNotFound3
  {
    A ref
    {
      B ref
      {
        C ref
        {
          D ref
          {
            E ref
            {
              F ref
              {
                F3 ref : F { }
              }
              E3 ref : E { }
            }
            D3 ref : D { }
          }
          C3 ref : C { }
        }
        B3 ref : B { }
      }
      A3 ref : A { }
    }
    A1 ref : A { }
    B1 ref : A1.B { }
    C1 ref : A1.B1.C { }                 // 3. should flag an error: B1 not found
    D1 ref : A1.B1.C1.D { }              // 4. should flag an error: B1 not found
    E1 ref : A1.B1.C1.D1.E { }           // 5. should flag an error: B1 not found
    F1 ref : A1.B1.C1.D1.E1.F { }        // 6. should flag an error: B1 not found
    A2 ref : A { }
    B2 ref : A1.B { }
    C2 ref : A1.B1.C { }                 // 7. should flag an error: B1 not found
    D2 ref : A1.B1.C1.D { }              // 8. should flag an error: B1 not found
    E2 ref : A1.B1.C1.D1.E { }           // 9. should flag an error: B1 not found
    F2 ref : A1.B1.C1.D1.E1.F { }        // 10. should flag an error: B1 not found
    A1;
    B1;
    C1;
    D1;
    E1;
    F1;
    A2;
    B2;
    C2;
    D2;
    E2;
    F2;
  }
  outerInheritsNotFound3;

}
