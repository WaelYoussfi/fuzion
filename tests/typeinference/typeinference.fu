typeinference
{

  out := stdout;

  chck(b bool, msg string)
  {
    s string;
    if b
      {
        s = "PASSED: ";
      }
    else
      {
        s = "FAILED: ";
      }
    out.println(s + msg);
  }

  typeInferencingFromIf1(b bool)
  {
    f choice<i32,string,bool> =
    {
      if       b { 3 }
      else if !b { false }
      else       { "string" }
    }
  }

  chck(match typeInferencingFromIf1(true ).f { i1 i32 => { i1==3 }; string,bool => false }, "typeinference from if 1");
  chck(match typeInferencingFromIf1(false).f { b1 bool => { b1 <=> false }; i32,string => false }, "typeinference from if 1");

  typeInferencingFromIf2(b bool) =>
  {
    f(x choice<i32,string,bool>) => x;
    f({
        if       b { 3 }
        else if !b { false }
        else       { "string" }
      })
  }
  chck(match typeInferencingFromIf2(true ) { i2 i32 => { i2 == 3 }; string, bool => false }, "typeinference from if 2");
  chck(match typeInferencingFromIf2(false) { b2 bool => { b2 <=> false }; i32, string => false }, "typeinference from if 2");
  // chck(typeInferencingFromIf2(true ) == 3, "typeinference from if 2"); // NYI: should cause a compile-time error
  // chck(typeInferencingFromIf2(false) == false, "typeinference from if 2"); // NYI: should cause a compile-time error

  typeInferencingFromMatch1
  {
    A { }
    B { }
    C { }
    D { }
    E { }
    abcde : choice<A,B,C,D,E> { }

    f(x abcde) choice<i32,string,bool,E>
    {
      match x
      {
        a A => 3
        B,C => "string"
        d D => false
        e E => e
      }
    }
  }
  r := typeInferencingFromMatch1.f(typeInferencingFromMatch1.A);
//  r2 := r ? i i32 => i==3 * => false;  // NYI: does not work yet
  r2 := match r { i i32 => { i==3 }; string,bool,typeInferencingFromMatch1.E => false };
  chck(r2, "typeInferencingFromMatch1 A");
//  chck((typeInferencingFromMatch1.f(typeInferencingFromMatch1.A) ? i i32 => i==3, * => false),"typeInferencingFromMatch1 A");  // NYI: does not work yet
  r = typeInferencingFromMatch1.f(typeInferencingFromMatch1.D);
  r2 = match r { b bool => { b <=> false }; i32, string,typeInferencingFromMatch1.E => false }
  chck(r2, "typeInferencingFromMatch1 D");
  //  chck((typeInferencingFromMatch1.f(typeInferencingFromMatch1.D) ? b bool => b==false, * => false),"typeInferencingFromMatch1 D");  // NYI: does not work yet

  typeInferencingFromMatch2
  {
    A { }
    B { }
    C { }
    D { }
    E { }
    abcde : choice<A,B,C,D,E> { }

    test(x abcde)
    {
      f(a choice<i32,string,bool,E>) { }
      f({
          match x
          {
            a A => 3
            B,C => "string"
            d D => false
            e E => e
          }
        });
    }
  }
  // NYI: TBD

}