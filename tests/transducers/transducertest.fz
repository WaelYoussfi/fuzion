# This file is part of the Fuzion language implementation.
#
# The Fuzion language implementation is free software: you can redistribute it
# and/or modify it under the terms of the GNU General Public License as published
# by the Free Software Foundation, version 3 of the License.
#
# The Fuzion language implementation is distributed in the hope that it will be
# useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
# License for more details.
#
# You should have received a copy of the GNU General Public License along with The
# Fuzion language implementation.  If not, see <https://www.gnu.org/licenses/>.


# -----------------------------------------------------------------------
#
#  Tokiwa Software GmbH, Germany
#
#  Source code of Fuzion test tupletest
#
#  Author: Michael Lill (michael.lill@tokiwa.software)
#
# -----------------------------------------------------------------------

transducertest :transducers is

  exitCode := 0

  chck (b bool, msg string) unit is
    if b
      say "PASSED: $msg"
    else
      say "FAILED: $msg"
      set exitCode := 1

  xf_filter := filter<Sequence<i32>,i32>(x -> x > 3)
  r := (1..5).transduce xf_filter
  chck (r.count == 2) "filter transducer"

  xf_map := map<Sequence<bool>,i32, bool>(x -> x > 3)
  r := (1..5).transduce xf_map
  chck (r.filter(x -> x).count == 2) "map transducer"

  xf_count := count<i32,i32>
  r := (1..5).transduce xf_count ((x,r) -> r) 0
  # NYI
  chck (r == 1) "count transducer"

  fuzion.std.exit exitCode
